kind: Deployment
apiVersion: apps/v1
metadata:
  name: videoapi
  labels:
    app.kubernetes.io/name: 'videoapi'
    app.kubernetes.io/part-of: 'VideoInsights'
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: videoapi
  template:
    metadata:
      labels:
        app.kubernetes.io/name: 'videoapi'
        app.kubernetes.io/part-of: 'VideoInsights'
    spec:
      containers:
      - name: videoapi
        image: acrazurecloudnative.azurecr.io/videoapi:1.0.0
        imagePullPolicy: Always
        env:
        - name: DOTNET_LOGGING__CONSOLE__DISABLECOLORS
          value: 'true'
        - name: ASPNETCORE_URLS
          value: 'http://*'
        - name: PORT
          value: '80'
        - name: SERVICE__VIDEOAPI__PROTOCOL
          value: 'http'
        - name: SERVICE__VIDEOAPI__PORT
          value: '80'
        - name: SERVICE__VIDEOAPI__HOST
          value: 'videoapi'
        - name: SERVICE__VIDEOWEB__PROTOCOL
          value: 'http'
        - name: SERVICE__VIDEOWEB__PORT
          value: '80'
        - name: SERVICE__VIDEOWEB__HOST
          value: 'videoweb'
        - name: "VideoIndexer__SubscriptionKey"
          valueFrom:
             secretKeyRef:
               name: videoapi
               key: SubscriptionKey
        - name: "VideoIndexer__AccountId"
          valueFrom:
             secretKeyRef:
               name: videoapi
               key: AccountId
        - name: "VideoIndexer__Location"
          valueFrom:
             secretKeyRef:
               name: videoapi
               key: Location
        - name: "VideoDatabase__ConnectionString"
          valueFrom:
             secretKeyRef:
               name: videoapi
               key: ConnectionString
        ports:
        - containerPort: 80
...
---
kind: Service
apiVersion: v1
metadata:
  name: videoapi
  labels:
    app.kubernetes.io/name: 'videoapi'
    app.kubernetes.io/part-of: 'VideoInsights'
spec:
  selector:
    app.kubernetes.io/name: videoapi
  type: ClusterIP
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: 80
...
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: videoweb
  labels:
    app.kubernetes.io/name: 'videoweb'
    app.kubernetes.io/part-of: 'VideoInsights'
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: videoweb
  template:
    metadata:
      labels:
        app.kubernetes.io/name: 'videoweb'
        app.kubernetes.io/part-of: 'VideoInsights'
    spec:
      containers:
      - name: videoweb
        image: acrazurecloudnative.azurecr.io/videoweb:1.0.0
        imagePullPolicy: Always
        env:
        - name: DOTNET_LOGGING__CONSOLE__DISABLECOLORS
          value: 'true'
        - name: ASPNETCORE_URLS
          value: 'http://*'
        - name: PORT
          value: '80'
        - name: SERVICE__VIDEOWEB__PROTOCOL
          value: 'http'
        - name: SERVICE__VIDEOWEB__PORT
          value: '80'
        - name: SERVICE__VIDEOWEB__HOST
          value: 'videoweb'
        - name: SERVICE__VIDEOAPI__PROTOCOL
          value: 'http'
        - name: SERVICE__VIDEOAPI__PORT
          value: '80'
        - name: SERVICE__VIDEOAPI__HOST
          value: 'videoapi'
        - name: VideoInsightsApi__Url
          value: 'http://videoapi.default.svc.cluster.local'
        ports:
        - containerPort: 80
...
---
kind: Service
apiVersion: v1
metadata:
  name: videoweb
  labels:
    app.kubernetes.io/name: 'videoweb'
    app.kubernetes.io/part-of: 'VideoInsights'
spec:
  selector:
    app.kubernetes.io/name: videoweb
  type: LoadBalancer
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: 80
...
